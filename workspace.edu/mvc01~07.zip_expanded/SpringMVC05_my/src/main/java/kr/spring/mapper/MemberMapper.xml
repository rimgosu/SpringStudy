<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.spring.mapper.MemberMapper">

	<select id="registerCheck" parameterType="String" resultType="kr.spring.entity.Member">
		select memid from member where memid = #{memId}
	</select>
	
	<insert id="join" parameterType="kr.spring.entity.Member">
	  INSERT INTO MEMBER(MEMIDX, MEMID, MEMPASSWORD, MEMNAME, MEMAGE, MEMGENDER,
      MEMEMAIL, MEMPROFILE)
      VALUES(
      (SELECT IFNULL(MAX(MEMIDX) + 1, 1) FROM MEMBER MEM),
      #{memId}, #{memPassword}, #{memName}, #{memAge},
      #{memGender}, #{memEmail}, #{memProfile}
      )
	</insert>
	
	<select id="login" parameterType="kr.spring.entity.Member" resultMap="memberMap">
		SELECT * 
		  FROM MEMBER mem LEFT OUTER JOIN AUTH auth
		    ON mem.MEMID = auth.MEMID
		 WHERE mem.MEMID = #{memId}
	</select>
	
	<update id="update" parameterType="kr.spring.entity.Member">
		update member set mempassword=#{memPassword}, memname=#{memName}, memage=#{memAge}, memgender=#{memGender}, mememail=#{memEmail}
		where memid = #{memId}
	</update>
	
	<update id="profileUpdate" parameterType="kr.spring.entity.Member">
		update member set memProfile=#{memProfile}
		where memid = #{memId}
	</update>
	
	<select id="getMember" parameterType="String" resultMap="memberMap">
		SELECT * 
		  FROM MEMBER mem LEFT OUTER JOIN AUTH auth
		    ON mem.MEMID = auth.MEMID
		 WHERE mem.MEMID = #{memId}
	</select>
	
	<resultMap type="kr.spring.entity.Auth" id="authMap">
		<id property="no" column="no"/>
		<result property="memId" column="memId"/>
		<result property="auth" column="auth"/>
	</resultMap>
	
	<resultMap type="kr.spring.entity.Member" id="memberMap">
		<id property="memIdx" column="memIdx"/>
		<result property="memId" column="memId"/>
		<result property="memPassword" column="memPassword"/>
		<result property="memName" column="memName"/>
		<result property="memAge" column="memAge"/>
		<result property="memGender" column="memGender"/>
		<result property="memEmail" column="memEmail"/>
		<result property="memProfile" column="memProfile"/>
		<collection property="authList" resultMap="authMap"/>
	</resultMap>
	
	<insert id="authInsert" parameterType="kr.spring.entity.Auth">
		insert into AUTH(MEMID, AUTH) values(#{memId}, #{auth})
	</insert>
	
	<delete id="authDelete" parameterType="String">
		DELETE FROM AUTH
		 WHERE MEMID = #{memId}
	</delete>
	
	
	
	
	
	
	

</mapper>